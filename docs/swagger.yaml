definitions:
  domain.Author:
    properties:
      bio:
        type: string
      birth_date:
        type: string
      book:
        items:
          $ref: '#/definitions/domain.Book'
        type: array
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      nationality:
        type: string
      updated_at:
        type: string
    type: object
  domain.Book:
    properties:
      author_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      genre:
        type: string
      id:
        type: string
      pages:
        type: integer
      publish_date:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  helper_http.Response:
    properties:
      data: {}
      message: {}
      meta: {}
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /author:
    get:
      description: Retrieve a list of all authors
      operationId: get-all-authors
      produces:
      - application/json
      responses:
        "50":
          description: ""
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Get all authors
      tags:
      - Author
    post:
      consumes:
      - application/json
      description: Create a new author record
      operationId: create-author
      parameters:
      - description: Author data
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/domain.Author'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper_http.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Create a new author
      tags:
      - Author
  /author/{id}:
    delete:
      description: Delete an author record by their ID
      operationId: delete-author-by-id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper_http.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Delete an author by ID
      tags:
      - Author
    get:
      description: Retrieve an author by their unique ID
      operationId: get-author-by-id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Author'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Get an author by ID
      tags:
      - Author
    put:
      consumes:
      - application/json
      description: Update an existing author record by their ID
      operationId: update-author-by-id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated author data
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/domain.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper_http.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Update an author by ID
      tags:
      - Author
  /author/{id}/books:
    get:
      description: Retrieve an author by their ID along with a list of their books
      operationId: get-author-with-books-by-id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Author'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Get an author with books by ID
      tags:
      - Author
  /book:
    get:
      description: Retrieve a list of all books
      operationId: get-all-books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Get all books
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Create a new book record
      operationId: create-book
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper_http.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Create a new book
      tags:
      - Book
  /book/{id}:
    delete:
      description: Delete a book record by its ID
      operationId: delete-book-by-id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper_http.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Delete a book by ID
      tags:
      - Book
    get:
      description: Retrieve a book by its unique ID
      operationId: get-book-by-id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Get a book by ID
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Update an existing book record by its ID
      operationId: update-book-by-id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper_http.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper_http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper_http.Response'
      summary: Update a book by ID
      tags:
      - Book
swagger: "2.0"
